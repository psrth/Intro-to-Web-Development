
 /* GENERAL CSS RULE


 selector {
     property: value;
     property2: value;
 } 
 







/* Learning about Selectivity  */

.title {
    color: red;
}

.subtitle {
    color: blue;
}

/* #black-hole-image {
    padding: 0.5em;
} */



/* Exploring pseudo-selectors */

li:first-child {
    color: green;
}

.title:hover {
    color: green;
}

.subtitle-article:hover {
    color: red;
}

#google-link:link {
    color: blue;
}

#google-link:visited {
    color: orangered;
}

/* Selector for very anchor tab that follows an h2 */
h2 + a {
    color: green;
}

/* General sibling combinator selector, all buttons that follow a text area AND THAT HAVE THE SAME PARENT */
textarea ~ button {
    color: indigo;
}

/* Child Selector — every single direct li inside of a ul */
ul > li {
    color: red;
}

/* Descendant Selector — any li that eventually is inside a ul  */
ul li {
    color: blue;
}

/* Attribute Selector — ^for starts with this value, $ for ends with this value, * for anywhere in path contains this value */
img[src^="../imgs/"] {
    border: 10px solid black;
}

/* Attribute Selector — |= is for starts with*/
h2[class~=subtitle-article] {
    background: yellow;
}

/* 
Syntax
[attr]
Represents elements with an attribute name of attr.
[attr=value]
Represents elements with an attribute name of attr whose value is exactly value.
[attr~=value]
Represents elements with an attribute name of attr whose value is a whitespace-separated list of words, one of which is exactly value.
[attr|=value]
Represents elements with an attribute name of attr whose value can be exactly value or can begin with value immediately followed by a hyphen, - (U+002D). It is often used for language subcode matches.
[attr^=value]
Represents elements with an attribute name of attr whose value is prefixed (preceded) by value.
[attr$=value]
Represents elements with an attribute name of attr whose value is suffixed (followed) by value.
[attr*=value]
Represents elements with an attribute name of attr whose value contains at least one occurrence of value within the string.
[attr operator value i]
Adding an i (or I) before the closing bracket causes the value to be compared case-insensitively (for characters within the ASCII range).
[attr operator value s] 
Adding an s (or S) before the closing bracket causes the value to be compared case-sensitively (for characters within the ASCII range).
 */


